$breakpoints: (
  'small':  767px,
  'medium': 1024px,
  'large':  1300px
) !default;


@mixin responsive($breakpoint) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
      // Prints a media query based on the value
      @media (min-width: map-get($breakpoints, $breakpoint)) {
        @content;
      }
    }
   
    // If the key doesn't exist in the map
    @else {
      @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
          + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
  }


@mixin flexbox($direction: row, $justify: space-between, $align: center) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

@mixin box() {
  background-color: white;
  border-radius: 2rem;
  padding: 1rem;

  @include responsive(small) {
    padding: 1rem 2rem;
  }


}

@mixin componentTitle() {
        font-weight: 900;
        text-transform: uppercase;
        font-size: 2rem;
        @include flexbox(row, flex-start, center);
        width: 100%;
        margin: 0 0.5rem;
}

@keyframes intro {

  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }

}

@keyframes loading {

  0%, 100% {
    opacity: 1;
  }

  50% {
    opacity: 0;
  }

}